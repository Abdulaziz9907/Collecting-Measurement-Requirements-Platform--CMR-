// <auto-generated />
using System;
using Commander.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Commander.Migrations
{
    [DbContext(typeof(InterfaceContext))]
    [Migration("20250730095337_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Commander.Models.Attachment", b =>
                {
                    b.Property<int>("Attachment_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Attachment_id"));

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Standard_id")
                        .HasColumnType("int");

                    b.Property<DateTime>("Uploaded_date")
                        .HasColumnType("datetime2");

                    b.HasKey("Attachment_id");

                    b.HasIndex("Standard_id");

                    b.ToTable("Attachments");
                });

            modelBuilder.Entity("Commander.Models.Department", b =>
                {
                    b.Property<int>("Department_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Department_id"));

                    b.Property<int>("Building_number")
                        .HasColumnType("int");


                    b.Property<string>("Department_name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Department_id");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("Commander.Models.PerformanceReport", b =>
                {
                    b.Property<int>("Report_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Report_id"));

                    b.Property<DateTime>("Completed_at")
                        .HasColumnType("datetime2");

                    b.Property<int>("Completed_standards")
                        .HasColumnType("int");

                    b.Property<int>("Department_id")
                        .HasColumnType("int");

                    b.Property<int>("Pending_standards")
                        .HasColumnType("int");

                    b.Property<int>("Total_standards")
                        .HasColumnType("int");

                    b.HasKey("Report_id");

                    b.HasIndex("Department_id");

                    b.ToTable("PerformanceReports");
                });

            modelBuilder.Entity("Commander.Models.Standard", b =>
                {
                    b.Property<int>("Standard_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Standard_id"));

                    b.Property<int>("Assigned_department_id")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("Proof_required")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Standard_goal")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Standard_name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Standard_number")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Standard_requirments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Standard_id");

                    b.HasIndex("Assigned_department_id");

                    b.ToTable("Standards");
                });

            modelBuilder.Entity("Commander.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Department_id")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("Employee_id")
                        .HasMaxLength(7)
                        .HasColumnType("int");

                    b.Property<string>("First_name")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<string>("Last_name")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("Id");

                    b.HasIndex("Department_id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Commander.Models.Attachment", b =>
                {
                    b.HasOne("Commander.Models.Standard", "Standard")
                        .WithMany()
                        .HasForeignKey("Standard_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Standard");
                });

            modelBuilder.Entity("Commander.Models.PerformanceReport", b =>
                {
                    b.HasOne("Commander.Models.Department", "Department")
                        .WithMany("PerformanceReports")
                        .HasForeignKey("Department_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("Commander.Models.Standard", b =>
                {
                    b.HasOne("Commander.Models.Department", "Department")
                        .WithMany("Standards")
                        .HasForeignKey("Assigned_department_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("Commander.Models.User", b =>
                {
                    b.HasOne("Commander.Models.Department", "Department")
                        .WithMany("Users")
                        .HasForeignKey("Department_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("Commander.Models.Department", b =>
                {
                    b.Navigation("PerformanceReports");

                    b.Navigation("Standards");

                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
